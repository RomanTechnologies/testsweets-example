name: CI

on:
  push:
    branches: [ master ]
  # TODO: temporary for faster tests, restore!
  # pull_request:
  #   branches: [ master ]

jobs:
  ios:
    runs-on: macos-14 # use macos-14 insted of macos-latest-large as that is based on M1 (  https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners#:~:text=N/A-,macOS,N/A,-Standard%20GitHub%2Dhosted ) 

    # outputs:
    #   built-apk: ${{ steps.buildApk.outputs.apkPath }}

    steps:
      - name: checkout
        uses: actions/checkout@v4

      - uses: subosito/flutter-action@v2
        with:
          channel: "stable"

      - name: Check Flutter version
        run: flutter doctor -v
        
      - name: Get all packages Flutter
        run: flutter pub get
        
      - name: Flutter Build debug IPA
        id: buildIpa
        run: flutter build ios --debug --simulator --no-codesign --dart-define=FORCE_CAPTURE_MODE=false

      - name: Setup Homebrew
        run: |
          /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
      
      - name: Install TestSweets
        run: |
          brew tap filledstacks/tap
          brew install testsweets

      - name: 'Print the devices list'
        run: xcrun simctl list devices available --json

      # install jq - cli tool for json querying
      # retrieve the device .udid to use in tests and store it in env var
      - name: 'Set Up Simulator UUID'
        run: |
          brew install jq &&
          IOS_SIM_UUID=$(xcrun simctl list devices available --json | jq -r '.devices."com.apple.CoreSimulator.SimRuntime.iOS-17-0"[] | select(.name == "iPhone 14") | .udid') &&
          echo "IOS_SIM_UUID=$IOS_SIM_UUID" >> $GITHUB_ENV
      
      - name: 'Print Selected UUID'
        run: echo $IOS_SIM_UUID
      
      - name: Start Emulator and Run TestSweets
        uses: futureware-tech/simulator-action@v3
        with:
          model: 'iPhone 14 Pro'
      
      - name: TestSweets Authenticate
        run: testsweets authenticate -e ${{ secrets.TESTSWEETS_EMAIL_ACCOUNT }} -p ${{ secrets.TESTSWEETS_PASSWORD }}

      - name: Run TestSweets Tests
        run: testsweets run -p hBPApL0mJHTofHNRipeq -a build/ios/iphonesimulator/Runner.app
