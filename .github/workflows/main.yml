name: Run TestSweets Tests

on:
  push:
  workflow_dispatch:

jobs:
  testsweets_tests:
    runs-on: macos-14 # use macos-14 insted of macos-latest-large as that is based on M1 (  https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners#:~:text=N/A-,macOS,N/A,-Standard%20GitHub%2Dhosted ) 

    # outputs:
    #   built-apk: ${{ steps.buildApk.outputs.apkPath }}

    steps:
      - name: checkout
        uses: actions/checkout@v4

      # - name: Enable KVM
      #   run: |
      #     echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
      #     sudo udevadm control --reload-rules
      #     sudo udevadm trigger --name-match=kvm

      - name: Gradle cache
        uses: gradle/actions/setup-gradle@v3
        
      - name: AVD cache
        uses: actions/cache@v4
        id: avd-cache
        with:
          path: |
            ~/.android/avd/*
            ~/.android/adb*
          key: avd-${{ matrix.api-level }}

      - name: create AVD and generate snapshot for caching
        if: steps.avd-cache.outputs.cache-hit != 'true'
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.api-level }}
          force-avd-creation: false
          emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: false
          script: echo "Generated AVD snapshot for caching."

      - name: run tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.api-level }}
          force-avd-creation: false
          emulator-options: -no-snapshot-save -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: true
          script: ./gradlew connectedCheck




      
    
      - name: checkout
        uses: actions/checkout@v4

      - name: 'Set up JDK'
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin' # This is Eclipse Temurin, you can change it to your preferred distribution
          java-version: '17'

      - uses: subosito/flutter-action@v2
        with:
          channel: "stable"

      - name: Check Flutter version
        run: flutter doctor -v
      - name: Get all packages Flutter
        run: flutter pub get
      - name: Flutter Build debug APK
        id: buildApk
        run: flutter build apk --debug --dart-define=FORCE_CAPTURE_MODE=false

      - name: Setup Homebrew
        run: |
          /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
      
      - name: Install TestSweets
        run: |
          brew tap filledstacks/tap
          brew install testsweets
      
      - name: Start Emulator and Run TestSweets # TODO: Currently we have to find the Alternative for this only
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 29
          arch: x86_64
          emulator-boot-timeout: 20000
          script: ./gradlew connectedCheck

        # uses: futureware-tech/simulator-action@v3
        # with:
        #   model: 'iPhone 8'
        #   os_version: '16.2'
      
      - name: TestSweets Authenticate
        run: testsweets authenticate -e ${{ secrets.TESTSWEETS_EMAIL_ACCOUNT }} -p ${{ secrets.TESTSWEETS_PASSWORD }}

      - name: Run TestSweets Tests
        run: testsweets run -p qA5ua2TOgxBtMGcSVBGE -a build/app/outputs/flutter-apk/app-debug.apk
